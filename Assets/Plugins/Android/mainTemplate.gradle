// Android Resolver Repos Start
([rootProject] + (rootProject.subprojects as List)).each { project ->
    project.repositories {
        def unityProjectPath = $/file:///**DIR_UNITYPROJECT**/$.replace("\\", "/")
        google()
        maven { url "https://maven.google.com"}
        maven { url "https://jitpack.io" }
        jcenter()
        mavenCentral()
        maven {
            url (unityProjectPath + "/Assets/GeneratedLocalRepo/Firebase/m2repository") // Packages/com.google.firebase.app/Firebase/Editor/AppDependencies.xml:22, Packages/com.google.firebase.messaging/Firebase/Editor/MessagingDependencies.xml:22
        }
        mavenLocal()
        mavenCentral()
    }
}
// Android Resolver Repos End
apply plugin: 'com.android.library'

**APPLY_PLUGINS**

// Android Resolver Repos Start
([rootProject] + (rootProject.subprojects as List)).each { project ->
    project.repositories {
        def unityProjectPath = $/file:///**DIR_UNITYPROJECT**/$.replace("\\", "/")
        google()
        maven { url "https://maven.google.com"}
        maven { url "https://jitpack.io" }
        jcenter()
        mavenCentral()
        maven {
            url (unityProjectPath + "/Assets/GeneratedLocalRepo/Firebase/m2repository") // Packages/com.google.firebase.app/Firebase/Editor/AppDependencies.xml:22, Packages/com.google.firebase.auth/Firebase/Editor/AuthDependencies.xml:20, Packages/com.google.firebase.database/Firebase/Editor/DatabaseDependencies.xml:22
        }
        mavenLocal()
    }
}
// Android Resolver Repos End

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])



	//implementation 'com.google.android.gms:play-services-gcm:16.1.0'
	//implementation 'com.google.gms:google-services:4.3.0'
    implementation 'com.google.android.gms:play-services-gcm:17.0.0'
    //implementation "com.google.android.gms:play-services:3.1.+"
    implementation "com.github.parse-community.Parse-SDK-Android:parse:4.1.0"
    implementation "com.github.parse-community.Parse-SDK-Android:fcm:4.1.0"
    implementation 'com.parse.bolts:bolts-android:1.4.0'
    
// Android Resolver Dependencies Start
    implementation 'com.google.android.gms:play-services-base:18.1.0' // Packages/com.google.firebase.app/Firebase/Editor/AppDependencies.xml:17
    implementation 'com.google.firebase:firebase-analytics:21.2.0' // Packages/com.google.firebase.messaging/Firebase/Editor/MessagingDependencies.xml:15
    implementation 'com.google.firebase:firebase-app-unity:10.5.0' // Packages/com.google.firebase.app/Firebase/Editor/AppDependencies.xml:22
    implementation 'com.google.firebase:firebase-common:20.3.0' // Packages/com.google.firebase.app/Firebase/Editor/AppDependencies.xml:13
    implementation 'com.google.firebase:firebase-iid:21.1.0' // Packages/com.google.firebase.messaging/Firebase/Editor/MessagingDependencies.xml:17
    implementation 'com.google.firebase:firebase-messaging:23.1.1' // Packages/com.google.firebase.messaging/Firebase/Editor/MessagingDependencies.xml:13
    implementation 'com.google.firebase:firebase-messaging-unity:10.5.0' // Packages/com.google.firebase.messaging/Firebase/Editor/MessagingDependencies.xml:22
// Android Resolver Dependencies End
**DEPS**}

// Android Resolver Exclusions Start
android {
  packagingOptions {
      exclude ('/lib/arm64-v8a/*' + '*')
      exclude ('/lib/armeabi/*' + '*')
      exclude ('/lib/mips/*' + '*')
      exclude ('/lib/mips64/*' + '*')
      exclude ('/lib/x86/*' + '*')
      exclude ('/lib/x86_64/*' + '*')
  }
}
// Android Resolver Exclusions End
android {
    compileSdkVersion **APIVERSION**
    buildToolsVersion '**BUILDTOOLS**'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion **MINSDKVERSION**
        targetSdkVersion **TARGETSDKVERSION**
        ndk {
            abiFilters **ABIFILTERS**
        }
        versionCode **VERSIONCODE**
        versionName '**VERSIONNAME**'
        consumerProguardFiles 'proguard-unity.txt'**USER_PROGUARD**
    }

    lintOptions {
        abortOnError false
    }

    aaptOptions {
        noCompress = **BUILTIN_NOCOMPRESS** + unityStreamingAssets.tokenize(', ')
        ignoreAssetsPattern = "!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~"
    }**PACKAGING_OPTIONS**
}**REPOSITORIES**
**IL_CPP_BUILD_SETUP**
**SOURCE_BUILD_SETUP**
**EXTERNAL_SOURCES**
